blueprint:
  name: Inverter Control Blueprint
  description: Sets inverter to desired state broadly based on current EMHASS output sensors and presently templated to MKAISER/Sungrow control scripts
  domain: automation
  input:
    master_switch:
      name: Master Switch
      description: Switch to control automation
      selector:
        entity:
      default: switch.inverter_control_master
    evening_switch:
      name: Evening Switch
      description: Switch to control evening activity (Suggested, and set to off if you dont want evening control)
      selector:
        entity:
      default: switch.inverter_control_evening
    spike_switch:
      name: Spike Switch
      description: Switch to control spike activity (Suggested, but set to Master Switch value if you dont want separate control [will default to on])
      selector:
        entity:
      default: switch.inverter_control_spike
    battery_trigger:
      name: Battery Trigger
      description: Battery Power Flow Sensor used for trigger and flow level decisioning. (EMHASS Default Sensor)
      selector:
        entity:
      default: sensor.p_batt_forecast
    grid_trigger:
      name: Grid Trigger
      description: Grid Power Sensor used for trigger and flow level decisioning. (EMHASS Default Sensor)
      selector:
        entity:
      default: sensor.p_grid_forecast
    spike_trigger:
      name: Spike Trigger
      description: Binary Sensor used to depict a spike condition and invoke a spike outcome. (Amber Default)
      selector:
        entity:
      default: binary_sensor.home_price_spike
    charge_discharge_level_sensor:
      name: Charge/Discharge Level Sensor
      description: Helper/Sensor used to set battery charge or discharge power level. (MKAISER/Sungrow Default)
      selector:
        entity:
#      default: input_number.set_sg_forced_charge_discharge_power
      default: input_number.test_automation_input_number
    battery_level:
      name: Battery Percentage Level (0-100)
      description: (MKAISER/Sungrow Default)
      selector:
        entity:
      default: sensor.battery_level
    battery_pause_level:
      name: Battery Pause Level
      description: Minimum Battery Level (Used as part of evening pause, set to 0 if not required)
      selector:
        number:
          min: 0
          max: 100
          mode: box
          unit_of_measurement: Percent
      default: 60
    post_action_delay:
      name: Post Action Delay
      description: Period after last action where script delays (remains running) in order to prevent an immediate re-run
      selector:
        number:
          min: 1
          max: 60
          mode: box
          unit_of_measurement: Seconds
      default: 10   
    battery_pause_time:
      name: Battery Pause Time
      description: Time after (in conjunction with min battery level) control reverts to normal consume until midnight
      selector:
        time:
      default: "20:30:00"
    notification_text_helper:
      name: Notification Helper
      description: Name of notification input.text helper to receive status e.g. Normal, Charge, Discharge etc. when actions take place. (Atomic Config Default)
      selector:
        entity:
      default: input_text.emhass_lastaction
    action_self_consumption:
      description: Script to put inverter into self consumption mode e.g. default (MKAISER/Sungrow Defaulted)
      selector:
        entity:
          filter:
            - domain: script
#      default: sg_set_self_consumption_mode
      default: script.test_automation_script
    action_discharge_battery:
      description: Script to initiate battery discharge (MKAISER/Sungrow Defaulted)
      selector:
        entity:
          filter:
            - domain: script
#      default: sg_set_forced_discharge_battery_mode
      default: script.test_automation_script
    action_charge_battery:
      description: Script to initiate battery charge (MKAISER/Sungrow Defaulted)
      selector:
        entity:
          filter:
            - domain: script
#      default: sg_set_forced_charge_battery_mode
      default: script.test_automation_script
    action_preserve_battery:
      description: Script to set battery to preserve (MKAISER/Sungrow Defaulted)
      selector:
        entity:
          filter:
            - domain: script
#      default: sg_set_self_consumption_mode
      default: script.test_automation_script

triggers:
  - trigger: state
    entity_id: !input battery_trigger
  - trigger: state
    entity_id: !input grid_trigger
  - trigger: state
    entity_id: !input spike_trigger
  - trigger: state
    entity_id: !input master_switch    
conditions:
  - condition: state
    entity_id: !input master_switch
    state: "on"    
    for:
      hours: 0
      minutes: 0
      seconds: 1
actions:
  - choose:
      - conditions:
          - condition: and
            conditions: []
          - condition: state
            entity_id: !input spike_trigger
            state: "on"
          - condition: state
            entity_id: !input spike_switch
            state: "on"
        sequence:
          - action: !input action_discharge_battery
            metadata: {}
            data: {}
          - action: input_number.set_value
            target:
              entity_id: !input charge_discharge_level_sensor
            data:
              value: >-
                {{(min(25,((states('sensor.battery_level')|int(0))-5))*400)|abs|int(0)}}
          - action: input_text.set_value
            metadata: {}
            data:
              value: Spike!!!
            target:
              entity_id: !input notification_text_helper
          - delay:
              hours: 0
              minutes: 0
              seconds: !input post_action_delay
              milliseconds: 0
        alias: Spike Action
      - conditions:
          - condition: and
            conditions:
              - condition: time
                after: !input battery_pause_time
              - condition: numeric_state
                entity_id: !input battery_level
                below: !input battery_pause_level
              - condition: state
                entity_id: !input evening_switch
                state: "on"
        sequence:
          - action: !input action_self_consumption
            metadata: {}
            data: {}
          - action: input_text.set_value
            metadata: {}
            data:
              value: Overnight
            target:
              entity_id: !input notification_text_helper
          - delay:
              hours: 0
              minutes: 0
              seconds: !input post_action_delay
              milliseconds: 0
        alias: Overnight Retain
      - conditions:
          - condition: numeric_state
            entity_id: !input battery_trigger
            above: 300
          - condition: numeric_state
            entity_id: !input grid_trigger
            below: -100
        sequence:
          - action: !input action_discharge_battery
            metadata: {}
            data: {}
          - action: input_number.set_value
            target:
              entity_id: !input charge_discharge_level_sensor
            data:
              value: >-
                {{max(100,(states('!input battery_trigger')|int(0)|abs))|int(0)}}
          - action: input_text.set_value
            metadata: {}
            data:
              value: Discharge
            target:
              entity_id: !input notification_text_helper
          - delay:
              hours: 0
              minutes: 0
              seconds: !input post_action_delay
              milliseconds: 0
        alias: Discharge
      - conditions:
          - condition: numeric_state
            entity_id: !input battery_trigger
            below: 0
          - condition: numeric_state
            entity_id: !input grid_trigger
            above: 1000
        sequence:
          - action: !input action_charge_battery
            metadata: {}
            data: {}
          - action: input_number.set_value
            target:
              entity_id: !input charge_discharge_level_sensor
            data:
              value: >-
                {{max(100,(states('!input battery_trigger')|int(0)|abs))|int(0)}}
          - action: input_text.set_value
            metadata: {}
            data:
              value: Charge
            target:
              entity_id: !input notification_text_helper
          - delay:
              hours: 0
              minutes: 0
              seconds: !input post_action_delay
              milliseconds: 0
        alias: Charge
      - conditions:
          - condition: or
            conditions: []
          - condition: and
            conditions:
              - condition: state
                entity_id: !input battery_trigger
                state: "0.00"
        sequence:
          - action: !input action_preserve_battery
            metadata: {}
            data: {}
          - action: input_text.set_value
            metadata: {}
            data:
              value: Bypass
            target:
              entity_id: !input notification_text_helper
          - delay:
              hours: 0
              minutes: 0
              seconds: !input post_action_delay
              milliseconds: 0
        alias: Preserve
    default:
      - action: !input action_self_consumption
        metadata: {}
        data: {}
      - action: input_text.set_value
        metadata: {}
        data:
          value: Normal
        target:
          entity_id: !input notification_text_helper
      - delay:
          hours: 0
          minutes: 0
          seconds: !input post_action_delay
          milliseconds: 0
mode: single
